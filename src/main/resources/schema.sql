create table if not exists users (
    id  bigint generated by default as IDENTITY,
    name varchar(255)   NOT NULL,
    email varchar(255)  NOT NULL,

    constraint pk_users primary key (id),
    constraint uq_users_email unique(email)
);

create table if not exists requests (
    id  bigint generated by default as IDENTITY,
    description varchar(255) NOT NULL,
    requestor_id  bigint NOT NULL,

    constraint pk_requests primary key (id),
    constraint fk_requests_requestor foreign key (requestor_id) references users(id)
);

create table if not exists items (
    id  bigint  generated by default as IDENTITY,
    name    varchar(255),
    description varchar(255) NOT NULL,
    is_available   boolean NOT NULL,
    owner_id   bigint NOT NULL,
    request_id bigint,

    constraint pk_items primary key (id),
    constraint fk_items_owner foreign key (owner_id) references users(id),
    constraint fk_items_request foreign key (request_id) references requests(id)
);

create table if not exists bookings (
    id  bigint generated by default as IDENTITY,
    start_date   timestamp without time zone,
    end_date     timestamp without time zone,
    item_id   bigint NOT NULL,
    booker_id  bigint NOT NULL,
    status  varchar(255) NOT NULL,

    constraint pk_bookings primary key (id),
    constraint fk_bookings_item foreign key (item_id) references items(id),
    constraint fk_bookings_booker foreign key (booker_id) references users(id)
);

create table if not exists comments (
    id  bigint generated by default as IDENTITY,
    text    varchar(255) NOT NULL,
    item_id   bigint NOT NULL,
    author_id  bigint NOT NULL,
    created     timestamp without time zone NOT NULL,

    constraint pk_comments primary key (id),
    constraint fk_comments_item foreign key (item_id) references items(id),
    constraint fk_comments_author foreign key (author_id) references users(id)
)
